import condacmds as cmds
import logging


import argparse
parser = argparse.ArgumentParser()
parser.add_argument('--python',default='3.9',
                    help='specify the python version for the new environment')
parser.add_argument('--buildstem',default='build-test',
                    help='stem for the name of the build directory')
parser.add_argument('-c','--condacmd',default='conda',choices=['conda','mamba'],
                    help='conda command, should be one of conda or mamba')
parser.add_argument('-e','--environment',default=None,
                    help='name for the new environment, autogenerated from other params by default')
parser.add_argument('--suffix',default=None,
                    help='suffix appended to default environment and build_dir')
parser.add_argument('--dry-run',action="store_true",
                    help='just process options but do not run any commands')

args = parser.parse_args()

pbld = cmds.PymeBuild(pythonver=args.python,
                      build_dir=args.buildstem,
                      condacmd=args.condacmd,
                      environment=args.environment,
                      mk_build_dir=False,
                      start_log=False,
                      suffix=args.suffix,
                      dry_run=args.dry_run
                      )

print("removing environment %s" % pbld.env)

if args.dry_run:
    logging.info("dry run, aborting...")
    import sys
    sys.exit(0)

answer = input("Continue?")
if answer.lower() not in ["y","yes"]:
    print("aborting...")
    import sys
    sys.exit(1)

print("removing...")
print(cmds.conda_remove(pbld.env))

import pathlib
build_dir = pbld.build_dir

if build_dir.exists():
    print('removing build dir "%s"' % build_dir)
    answer = input("Continue?")
    if answer.lower() not in ["y","yes"]:
        print("aborting...")
        import sys
        sys.exit(1)

    import shutil
    shutil.rmtree(build_dir)
